pico-8 cartridge // http://www.pico-8.com
version 33
__lua__
-- polar coordinates test
-- by @johndalton

-->8

function _init()
    enemies={}
    add(enemies, make_enemy())
    add(enemies, make_enemy())
    add(enemies, make_enemy())

    player=make_player()
end    

function make_enemy()
    e={}
    e.ispolar=true
    e.speed=1.3
    -- e.angle=(flr(rnd(10))-5)/100
    e.direction=rnd(1)
    e.turnrate=rnd(3)/100
    e.x=rnd(127)
    e.y=rnd(127)
    e.ticks=rnd(30)

    return e
end

function update_enemy(e)
    e.ticks+=1
    if e.ticks>90 then
        e.ticks=0
    end

    if e.ticks % 30 == 0 then
        if rnd(99) > 5 then
           e.direction=rnd(1)
        end
    end

    move_turning_target(e, player)

    if e.x>127 then
        e.x=0
    end
    if e.x<0 then
        e.x=127
    end

    if e.y>127 then
        e.y=0
    end
    if e.y<0 then
        e.y=127
    end
end

-->8
-- movement

function update_position(s)
    if s.ispolar == true then
        s.dx=s.speed*cos(s.direction)
        s.dy=s.speed*sin(s.direction)
    end

    s.x+=s.dx
    s.y+=s.dy
    -- out of bounds check handled elsewhere
end

function move_to_pos(s, x, y)
    -- FIXME handle non-polar movement
    s.direction=atan2(x-s.x,y-s.y)
    update_position(s)
end

function move_to_target(s, t)
    move_to_pos(s, t.x, t.y)
end

function move_turning_pos(s, x ,y)
    t_direction=atan2(x-s.x,y-s.y)
    if t_direction > s.direction + s.turnrate then
        s.direction+=s.turnrate
    elseif t_direction < s.direction - s.turnrate then
        s.direction-=s.turnrate
    end

    update_position(s)
end

function move_turning_target(s, t)
    move_turning_pos(s, t.x, t.y)
end

function move_straight_ahead(s)
    -- no change to direction or speed
    update_position(s)
end

function move_nowhere(s)
    -- no change to position
end



function make_player()
    p={}
    p.ispolar=false
    p.dx=0
    p.dy=0
    p.a=1
--    p.speed=0.2
--    p.turnrate=0.02
--    p.direction=rnd(1)
    p.x=64
    p.y=64
    p.ticks=0

    return p
end

function update_player(p)
--    if btn(0) then p.direction+=p.turnrate end
--    if btn(1) then p.direction-=p.turnrate end
--    if btn(2) then p.speed+=0.1 end
--    if btn(3) then p.speed-=0.1 end
  
    p.ticks+=1
    if p.ticks>90 then
        p.ticks=0
    end

--    if p.direction > 1 then
--        p.direction = 0
--    end
--    if p.direction < 0 then
--        p.direction = 1
--    end

--  p.dx=p.speed*cos(p.direction)
--  p.dy=p.speed*sin(p.direction)

    p.dx=0
    p.dy=0

    if btn(0) then p.dx = p.a*-1 end
    if btn(1) then p.dx = p.a end
    if btn(2) then p.dy = p.a*-1 end
    if btn(3) then p.dy = p.a end

    p.x += p.dx
    p.y += p.dy
  
    if p.x<0   then p.x=0 end
    if p.x>120 then p.x=120 end
    if p.y<0   then p.y=0 end
    if p.y>120 then p.y=120 end
end

function _update()
    foreach(enemies, update_enemy)
    update_player(player)
end

function draw_enemy(e)
    spr(8,e.x,e.y)    
end

function draw_player(p)
    spr(9,p.x,p.y)    
end


function print_details(e)
    print("enemies:",0,50,8)
    print(#enemies,32,50,8)
    
    print("speed:",0,0,8)
    print(e.speed,24,0,8)
    print("dir:",0,7,8)
    print(e.direction,24,7,8)
    print("dx:",0,14,8)
    print(e.dx,24,14,8)
    print("dy:",0,21,8)
    print(e.dy,24,21,8)
end

function _draw()
    cls()
    print_details(player)
    foreach(enemies, draw_enemy)
    draw_player(player)
end

__gfx__
a00000000000000000000000000000000000000000000000000000000000000000067000000a0000000000000000000000000000000000000000000000000000
70000000007006000070060000706000000707000000000000000bb3b3b00000056666700099a000007006000070600000070700000000000000000000000000
000000000060050000600500006050000006060000700700000bb3bb3b3b30005dd6666704999a00006005000060500000060600000000000000000000000000
00000000006cc500006cc500006c50000007c6000007700000bbbbb3bbbbbb0005588d604933b9a0006cc500006c50000007c600000000000000000000000000
00000000076cd650076cd650076c65000076c560000770000b3bb22bb22b3bb00000000004449900076cd650076c65000076c560000000000000000000000000
00000000765dd555765dd5557d5d55000076d5d6007007000bb3b203b203bb300000000000409000765dd5557d5d55000076d5d6000000000000000000000000
000000006506506565965965659596000069595600000000b3bbb00b300bb3bb0000000000000000659659656595960000695956000000000000000000000000
000000000000000000a00a0000a0a000000a0a0000000000bbb3bb3bbb3bbb3b000000000000000000a00a0000a0a000000a0a00000000000000000000000000
f0f0000000f00000000000000f0000000000000000000000bb3bb3bbbb3bb3bb0000000000000000000000000000000000000000000000000000000000000000
0f0000000f0f00000fff0000fff000000f00000000000000b3b3bbb88bbb3b3b0000000000000700007000000000000000000000000000000000000000000000
f0f00000f0f0f0000fff00000f00000000000000000000000bbbbb8ee8bbbbb00000000000000705507000000000000000000000000000000000000000000000
000000000f0f00000fff00000000000000000000000000000b0bb355553bb0b00000000000000655556000000000000000000000000000000000000000000000
0000000000f0000000000000000000000000000000000000b000b000000b000b000000000000065cc56000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000b00b000000b00b000000000000076cccc6700000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000b000b0000b000b000000000000076cddc6700000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000766cddc6670000000000000000000000000000000000000000000
0f000000f0f0000000f000000f0000000f00000000000000000000000000000000000000000667cccc7660000000000000000000000000000000000000000000
fff000000f0f00000fff0000000f000000000000000000000000000000000000000000000076766cc66567000000000000000000000000000000000000000000
0f000000f0f00000fffff0000f00000000f000000000000000000000000000000000000070767656676567060000000000000000000000000000000000000000
000000000f0f00000fff000000000000000000000000000000000000000000000000000077667656676566760000000000000000000000000000000000000000
000000000ff0000000f0000000000000000000000000000000000000000000000000000078667656676566860000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000078675556665566860000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000068659916659956860000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000aa0660aa00000000000000000000000000000000000000000000
3b000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000200002f650226501d650186501c6501f65024650276502a6502c6502d6502b6502965026650216501e650196501665013650106500b6500965005650036500165006650016500365001650066500165002650
00020000251501d650151500e6500b1500a6500315003650021000460001100371003710034100371003710036100341003710034100341003510013100011000110000000000000000000000000000000000000
0002000038650161502d6500160008600016000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
